definitions:
  model.Login:
    properties:
      UserEmail:
        type: string
      UserPhone:
        type: string
    type: object
  model.Movie:
    properties:
      genre:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
  model.Register:
    properties:
      Address:
        type: string
      DOB:
        type: string
      Email:
        type: string
      Name:
        type: string
      Phone:
        type: string
      image:
        type: string
      userId:
        type: string
    type: object
  model.Update:
    properties:
      Address:
        type: string
      Name:
        type: string
    type: object
info:
  contact:
    name: gRPC
    url: https://gRPC.service.com/
  description: This is the main server handling the grpc major operations.
  termsOfService: http://swagger.io/terms/
  title: gRPC service
  version: "1.0"
paths:
  /image/aws:
    post:
      consumes:
      - application/json
      description: upload image with the input payload.
      parameters:
      - description: upload file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: upload image for particular user.
      tags:
      - Image
  /movies/:
    get:
      consumes:
      - application/json
      description: Get details of movies
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get details of All movie
      tags:
      - Movie
    post:
      consumes:
      - application/json
      description: create movie with the input payload.
      parameters:
      - description: Create movie
        in: body
        name: movie
        required: true
        schema:
          $ref: '#/definitions/model.Movie'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: create movie for given particular field.
      tags:
      - Movie
  /movies/{id}:
    delete:
      consumes:
      - application/json
      description: delete details of movie by id
      parameters:
      - description: delete movie by id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: delete details of movie entry by movie id
      tags:
      - Movie
    get:
      consumes:
      - application/json
      description: Get details of movie by id
      parameters:
      - description: get movie by id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get details of movie by movie id
      tags:
      - Movie
    put:
      consumes:
      - application/json
      description: update movie with the given movie fields.
      parameters:
      - description: update movie
        in: body
        name: movie
        required: true
        schema:
          $ref: '#/definitions/model.Movie'
      - description: update movie by id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: update movie for given field.
      tags:
      - Movie
  /user/auth/:
    get:
      consumes:
      - application/json
      description: Get details of users
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get details of users
      tags:
      - User
  /user/auth/{user_id}:
    delete:
      consumes:
      - application/json
      description: delete user detail with the given user id.
      parameters:
      - description: delete user by id
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: delete user detail by given id.
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get details of user by id
      parameters:
      - description: get user by id
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get details of user by id
      tags:
      - User
    put:
      consumes:
      - application/json
      description: update user detail with the given user fields.
      parameters:
      - description: update user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.Update'
      - description: update user by id
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: update user detail by given field.
      tags:
      - User
  /user/login:
    post:
      consumes:
      - application/json
      description: login user with the input payload.
      parameters:
      - description: login User
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/model.Login'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: login user by given phone and email.
      tags:
      - User
  /user/register:
    post:
      consumes:
      - application/json
      description: Register user with the input payload.
      parameters:
      - description: Create User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.Register'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Register user by given particular field.
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
