syntax = "proto3";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

package pb;

option go_package = "/pb";

message Register {
  string user_id = 1;
  string user_name = 2;
  string user_address = 3;
  string user_phone = 4;
  string user_email = 5;
  string user_dob = 6;
  string image_id = 7;
}

message Login {
  string user_phone = 1;
  string user_email = 2;
}

message GetOneUser {
  string user_id = 1;
}

message CreateRegisterRequest{
  Register userRegister =1 ;
}

message CreateRegisterResponse {
  Register userRegister = 1;
}

message GetOneUserRequest {
  string user_id=1;
  GetOneUser userRegister = 2;
}

message GetOneUserResponse {
  Register userRegister = 1;
}

message CreateLoginRequest {
  Login userLogin = 1;
}

message CreateLoginResponse {
  Register userLogin = 1;
}

message GetUsersRequest {}

message GetUsersResponse {
  repeated Register users = 1;
}

message UpdateUserRequest {
  string user_id=1;
  Register UpdateUser = 2;
}

message UpdateUserResponse {
  Register UpdateUser = 1;
}

message DeleteUserRequest {
  string user_id = 1;
}

message DeleteUserResponse {
  bool success = 1;
}

service UserService {
  rpc RegisterUser(CreateRegisterRequest) returns(CreateRegisterResponse){
    option (google.api.http) = {
      post: "/user/register"
      body:"*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "Authentication";
          value: {}
        }
      }
    };
  }

  rpc GetUser(GetOneUserRequest) returns (GetOneUserResponse) {
    option (google.api.http) = {
      get: "/user/{user_id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "Authentication";
          value: {}
        }
      }
    };
  }

  rpc LoginUser(CreateLoginRequest) returns (CreateLoginResponse) {
    option (google.api.http) = {
      post: "/user/login",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "Authentication";
          value: {}
        }
      }
    };
  }

  rpc GetMultipleUsers(GetUsersRequest) returns (GetUsersResponse) {
    option (google.api.http) = {
      get: "/user"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "Authentication";
          value: {}
        }
      }
    };
  }

  rpc UpdateUserDetail(UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      put: "/user/{user_id}/update",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "Authentication";
          value: {}
        }
      }
    };
  }

  rpc DeleteUserDetail(DeleteUserRequest) returns (DeleteUserResponse) {
    option (google.api.http) = {
      delete: "/user/{user_id}/delete"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "Authentication";
          value: {}
        }
      }
    };
  }
}
